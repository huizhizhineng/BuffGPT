apiVersion: v1
kind: Service
metadata:
  labels:
    app: redis-svc
  name: redis-svc
  namespace: k8s-redis
spec:
  ports:
  - port: 6360
    protocol: TCP
    targetPort: 6360
  selector:
    app: redis-sts
  type: ClusterIP
  clusterIP: None
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: redis-sts
  name: redis-sts
  namespace: k8s-redis
spec:
  selector:
    matchLabels:
      app: redis-sts
  replicas: 6
  updateStrategy:
    type: RollingUpdate      
  serviceName: redis-svc
  template:                     
    metadata:
      labels:
        app: redis-sts
      
    spec:
#     affinity:
#       podAntiAffinity:
#         preferredDuringSchedulingIgnoredDuringExecution:
#         - weight: 100
#           podAffinityTerm:
#             labelSelector:
#              matchExpressions:
#               - key: app
#                 operator: In
#                 values:
#                 - redis-sts
#             topologyKey: kubernetes.io/hostname
      containers:
      - name: redis
        image: redis:latest
        imagePullPolicy: IfNotPresent
        command:
          - "redis-server"
        args:
          - "/etc/redis/redis.conf"
          - "--cluster-announce-ip"
          - "$(POD_IP)"
        env:
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP   
        ports:
        - name: redis-6379
          containerPort: 6360
        volumeMounts:
        - name: "redis-conf"
          mountPath: /etc/redis/redis.conf
          subPath: redis.conf
        - name: "redis-data"
          mountPath: "/data"
        - name: localtime
          mountPath: /etc/localtime
          readOnly: true
      restartPolicy: Always
      volumes:
      - name: "redis-conf"
        configMap:
          name: redis
        #    items:
        #    - key: "redis.conf"
        #      path: "redis.conf"
      - name: localtime
        hostPath:
          path: /etc/localtime
#          type: File
  volumeClaimTemplates:
    - metadata:
        name: "redis-data"
      spec:
        resources:
          requests:
            storage: 50Gi
        accessModes:                            
        - ReadWriteOnce
        storageClassName: course-nfs-storage
